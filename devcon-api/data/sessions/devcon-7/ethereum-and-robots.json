{
  "id": "ethereum-and-robots",
  "sourceId": "9G9LSH",
  "title": "Ethereum and Robots",
  "description": "I will describe how Ethereum can be used in the emerging consumer robots industry (and generally for autonomous machines).\r\n* privacy preserving surveillance\r\n* autonomous transport\r\n* factory to consumer - tokenization models\r\n* Laws of Robotics - zk hardware",
  "track": "Real World Ethereum",
  "type": "Talk",
  "expertise": "Beginner",
  "audience": "Product",
  "featured": false,
  "doNotRecord": false,
  "tags": [
    "Collective Intelligence",
    "Civil Resistance",
    "DePIN",
    "Autonomous World",
    "robots",
    "Autonomous World",
    "Civil Resistance",
    "Collective Intelligence",
    "DePIN"
  ],
  "keywords": [
    "Robots"
  ],
  "duration": 1531,
  "language": "en",
  "sources_swarmHash": "1f7a566e27b32382aa1713acd471469239bf022cfe7569f8241c430a8ebb9577",
  "sources_youtubeId": "SQzTSNurehU",
  "sources_ipfsHash": "",
  "sources_livepeerId": "",
  "sources_streamethId": "6735c5c19dbb7a90e1266802",
  "transcript_vtt": "https://streameth-develop.ams3.digitaloceanspaces.com/transcriptions/6735cae29dbb7a90e1adef32.vtt",
  "transcript_text": " Hey, everyone. My name is Marcus. I'm building EthOS. So the first question is what is EthOS? So three years ago, we forked Androids, more specifically Graphene OS. We started building Ethereum, putting Ethereum into the OS layer because we think current OSs see Ethereum as an app. We want to leverage the protocol. The first thing we we did was basically put a light note on it. And, yeah. And so, for example, we have on E4OS, we have a system level wallet or OS level wallet. So we took basically a signer, put it into the OS, and any app can basically connect to it and make signature requests to the user. And the upgrade for the users, they don't have to switch apps or anything and it just works. There's also basically upgrades to privacy and security and basically the reason is it doesn't do any outbound internet transactions so you also don't need any internet to sign anything. Also, yeah, as I mentioned before, we put right now on EthOS, we have two light client proxies. So when we first started, the first thing that we wanted to do was put a light node on it. And at the time, we didn't have much to choose from. So we took the Geflight node, put it into the OS as a system server, and basically what happened was it really into the OS as a system server, and basically what happened was it really turned the phone into a pocket warmer. The battery really, really drained pretty quickly. But it did work when you had a stable internet connection, it would connect to peers, and then you would have a local RPC with which you can send transactions, get blockchain data and also any app could connect to this RPC. Yeah, as I mentioned right now, we have Helios and Nimbus verified proxy. They're both currently Liteclient proxies, not full Liteclients, because of the merge, the Geth Lite node stopped working because the beacon chain was added to Ethereum. And so right now, basically, you still need an essentialised RPC, but it does verify some pieces of data that it gets from this RPC. So this is pretty cool. And also, like, for the UX for the user, we wanted to make it so that it's, like, as simple as turning on and off Bluetooth or Wi-Fi. You can turn on your light client and just, just like have a local RPC on your phone. And so this brings me to the first issue that we have. Basically there is almost no mobile native dApps currently. So basically I'm a big fan of like native dApps. Currently like all of the dApps are like web dApps and then there are some that are progressive web apps, but they still face the platform risk of Apple and Google can shut you down if you are a PWA. And so basically what we created last week actually is like basically an app wrapper that is native. It looks and feels like a native app, but it actually opens up a web view that auto-injects the OS level wallet into the web app. So for users, it's just like opening Aave and the wallet is connected and you can start like basically doing transactions. And so this brings me to basically our announcement from last month. We announced our first hardware. So basically what we first did when we first started was basically bring your own device. We still have a web installer where you can basically buy a pixel by yourself at a local store. It has to be bootloader unlocked. You connect your phone and it just installs ethos on it for you. But people ran into some issues. So basically, you know, because you had to get a specific pixel and it had to be bootloader unlocked and some carriers actually lie about it being bootloader unlocked. And so basically, we then started like selling Pixel 7As running EthOS. But then we also came into a roadblock and basically the roadblock there was that it's very hard to reliably get pixels. And so we were just like, hey, let's do some hardware. And so we started talking with some phone manufacturers and they sent us like some phones that they did in the past but they all really looked bad. We were just thinking, okay, nobody is going to replace their iPhone with a random crypto phone. So, we thought to ourselves, hey, let's first make a really cool, fun and exciting secondary device that because it's a secondary device, it doesn't have to be boring. Basically it's called the DGEN1 because it's our very first device. It's our first device on our journey that we want to like our big mission is like self-sovereign hardware. And basically what is self-sovereign hardware? I'm glad you asked. So basically I wrote a blog post about it last year, and for me self-serve and hardware is where basically not only the OS that runs on top of it is open source, which we have currently, Ethos is fully open source, but also the hardware is open and inspectable. Like literally from the CPU instruction all the way to the app. It's a big mission, but I think it's very important. Because currently with like, CPU instruction all the way to the app. It's a big mission, but I think it's very important. Because currently with like if you look at the current hardware wallet landscape, for example, if you take a ledger, you really rely on security for obscurity. And that's very, very bad, especially if you're storing large amounts of crypto on it. And basically not only that, but also basically last year there was like this big controversy, if you remember. The ledger, they announced like this ledger recovery program where they basically said like yeah, with a firmware update we can extract your private keys. And it was like, oh, my God. Okay. So, basically if a ledger can, a firmware update can extract your private key, what stops a malicious actor from pushing a malicious firmware update? It's basically the ledger firmware signing key. Now I assume and I hope that they hold it very dearly and very secure, but this is like a huge trust assumption for like every ledger to be secured by basically one ledger firmware signing key. So this is very bad. And so for self-server hardware, it's a natural use case for crypto because you don't have to trust. There's no trusted modules. Everything is open. And that's one of the big, big things with the current phone landscape. The iPhones is the worst because it's like, okay, closed OS and closed hardware, you can't inspect it on any level. But with Android it's a little better, you can inspect the OS, but there's still like proprietary blobs of code, like for example, like play services and like device drivers for hardware, which they don't allow you to open source just like ledger, they can't open source some things on the low level stuff. And so this is like very bad as soon as you have crypto in it as well because you're like, okay, I have this phone, it has this OS and it's open source but there's still like some trusted like blobs of code that are closed source and you don't know what they do. And so basically, yeah, that's like our big mission. And yeah, the DGN1 is like our first step towards that mission.",
  "eventId": "devcon-7",
  "slot_start": 1731574800000,
  "slot_end": 1731576600000,
  "slot_roomId": "main-stage",
  "resources_presentation": "https://docs.google.com/presentation/d/1s1aFTwzOBXNg9v3Cu1EnNW22GUWNxNYFneRubREaJXE",
  "resources_slides": "https://drive.google.com/file/d/19jj064cf1jQRV8xcl5AYOsrj3OMhFl48/view",
  "speakers": [
    "tomasz-stanczak"
  ]
}